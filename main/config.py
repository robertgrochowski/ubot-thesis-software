import numpy as np

# --- Constants ---
SIDE_LEFT = "-1"
SIDE_RIGHT = "1"

# video
RECORD = False
RECORD_FILENAME = "record.mp4"
HEIGHT = 720
WIDTH = 960
HALF_WIDTH = WIDTH//2
HALF_HEIGHT = HEIGHT//2
REGION_OF_INTEREST = [
            (0, HEIGHT),
            (0, HEIGHT // 2),
            (WIDTH, HEIGHT // 2),
            (WIDTH, HEIGHT),
        ]
# Hough line transform
HOUGH_RHO = 2
HOUGH_THETA = np.pi / 180
HOUGH_THRESHOLD = 10
HOUGH_MIN_LINE_LENGTH = 10
HOUGH_MAX_LINE_GAP = 5

# image preprocess
BLUR_KERNEL = 11
CANNY_THRESHOLD1 = 180
CANNY_THRESHOLD2 = CANNY_THRESHOLD1//3

# Hough line transform
HOUGH_RHO = 2
HOUGH_THETA = np.pi / 180
HOUGH_THRESHOLD = 10
HOUGH_MIN_LINE_LENGTH = 10
HOUGH_MAX_LINE_GAP = 5

# filtering data
MIN_VALID_LINES_PER_SIDE = 3
MAX_DISTANCE_BETWEEN_LINES = 200
MIN_DISTANCE_FROM_OPPOSITE_LINE = 100
MIN_ITERATIONS_TO_START = 10
BIAS_AVERAGES_COUNT = 7
ITERATIONS_TO_STORE_LINEAR_FUNC = 10

# colors
LINE_CORRECT_LEFT_COLOR = [255, 0, 0]
LINE_CORRECT_RIGHT_COLOR = [0, 255, 0]
LINE_IGNORED_LEFT_COLOR = [128, 0, 128]
LINE_IGNORED_RIGHT_COLOR = [0, 140, 255]

# Draw lines functions
APPROX_LINE_MAX_Y = HEIGHT
APPROX_LINE_MIN_Y = int(HEIGHT * (3.0 / 5.0))

# engines power
ENGINES_POWER_NO_LEFT_LINES = 16, 22
ENGINES_POWER_NO_RIGHT_LINES = 22, 16

INITIAL_POWER_LEFT = 17
INITIAL_POWER_RIGHT = 16

MAX_BIAS_DIST = 150
MIN_BIAS_DIST = 20
MAX_ADDITIONAL_POWER = 5

